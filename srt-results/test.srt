0
00:00:00,920 --> 00:00:05,920
各位同学很高兴与大家在深度学习returns floor 的课程中间遇见

1
00:00:06,100 --> 00:00:09,730
我们这节课程以深度学习的算法讲解为主

2
00:00:09,730 --> 00:00:12,340
以transform 的一个实践为辅

3
00:00:12,340 --> 00:00:14,020
通过原理时间的方式

4
00:00:14,020 --> 00:00:17,680
确保大家能够深刻的理解深度学习的一个算法

5
00:00:17,680 --> 00:00:20,110
那么在引入深度学习算法之前

6
00:00:20,110 --> 00:00:23,060
首先我们来简单的介绍一下tce floor 

7
00:00:23,240 --> 00:00:26,270
首先我们来看一下times floor 了一个发展历程

8
00:00:26,270 --> 00:00:26,870
称flow 

9
00:00:26,870 --> 00:00:30,860
它是由google 的制定领导了一个深度学习的一个开发小组

10
00:00:30,860 --> 00:00:33,110
研究出来了一个深度学习的框架

11
00:00:33,110 --> 00:00:36,440
它早在2015年就已经发布了第一个测试版本

12
00:00:36,440 --> 00:00:37,880
那个时候还叫做一个0

13
00:00:37,880 --> 00:00:38,540
1

14
00:00:38,540 --> 00:00:42,080
在前一年也就是17年的时候发布了第一个正式的版本

15
00:00:42,080 --> 00:00:43,250
可以看得到大概是每

16
00:00:43,250 --> 00:00:46,460
经过两年完成一个大版本的一个这样的迭代

17
00:00:46,460 --> 00:00:49,040
那么从2015年真是flow 发布的时候

18
00:00:49,040 --> 00:00:51,770
同类型的一个深度学习的框架有哪些呢

19
00:00:51,770 --> 00:00:52,640
我们来看一下

20
00:00:52,640 --> 00:00:53,510
thank you learn 

21
00:00:53,510 --> 00:00:56,150
它也是一个面向于机器学习的一个框架

22
00:00:56,150 --> 00:00:57,920
用的非常非常广泛

23
00:00:57,920 --> 00:01:00,170
而且出现了一个时间也是比较早的

24
00:01:00,170 --> 00:01:01,550
但是它有一个最大的问题

25
00:01:01,550 --> 00:01:03,260
它是面向于一个机器学习的一个框架

26
00:01:03,260 --> 00:01:07,490
他没有专门对深度学习来做一个这样的相关的设计

27
00:01:07,490 --> 00:01:08,990
而且跟知名的一个问题

28
00:01:08,990 --> 00:01:11,690
它不支持一个g p u 的一个加速运算

29
00:01:11,690 --> 00:01:12,920
在2013年的时候

30
00:01:12,920 --> 00:01:17,540
我们的华人贾扬清开发出来了第一个面向深度学习的一个框架

31
00:01:17,540 --> 00:01:20,060
它采用的是一个c 加加的一个开发语言

32
00:01:20,060 --> 00:01:23,090
当然也支持一个python 的一个这样的接口

33
00:01:23,090 --> 00:01:23,240
但是

34
00:01:23,390 --> 00:01:25,130
他并不支持一个自动的求导

35
00:01:25,130 --> 00:01:30,170
也就是说我们每一个网络层的一个梯度的传播方式需要我们自己去定义

36
00:01:30,170 --> 00:01:31,070
但总的来说

37
00:01:31,070 --> 00:01:32,570
卡费生成深度学习框架了

38
00:01:32,570 --> 00:01:36,800
一个鼻祖carriers 与其他的一个深度学习框架并不同

39
00:01:36,800 --> 00:01:40,010
它只是提供了一套这样的a p i 的一个接口

40
00:01:40,010 --> 00:01:42,530
它底层的一个具体的一个运算实现

41
00:01:42,530 --> 00:01:43,280
并不是由他自己

42
00:01:43,280 --> 00:01:44,150
来完成

43
00:01:44,150 --> 00:01:46,840
所以的话它只能叫做一个深度学习的一个rapper 

44
00:01:47,020 --> 00:01:49,810
还有一个更老的一个鼻祖的烦恼

45
00:01:49,810 --> 00:01:54,910
三个的话也是由加拿大的那一帮深度学习的科学家园老所开发出来的

46
00:01:54,910 --> 00:01:58,330
但是它存在的一个最大的问题是他开发起来比较困难

47
00:01:58,330 --> 00:02:00,010
调试起来比较困难

48
00:02:00,010 --> 00:02:03,160
还有另外一个类型呢叫做一个touch touch 框架了

49
00:02:03,160 --> 00:02:05,770
一个最大问题是采用的是一个内外语言

50
00:02:05,770 --> 00:02:07,030
这个语言来说相对来

51
00:02:07,030 --> 00:02:08,050
说比较小众

52
00:02:08,050 --> 00:02:11,500
所以的话使用起来对于新手来说不是那么的友好

53
00:02:11,680 --> 00:02:16,000
这里的话我们也同时跟大家推荐一下我们新加坡国立大学的一个框架

54
00:02:16,000 --> 00:02:20,230
它叫做n u s 能新港现在是rpg 下面一个服务号项目

55
00:02:20,230 --> 00:02:22,540
大家如果有对于tenth floor 和拍挞纸

56
00:02:22,540 --> 00:02:24,190
其他的框架有诉求的话

57
00:02:24,190 --> 00:02:27,640
可以去关注一下singa 这一个什么时期的一个框架

58
00:02:27,640 --> 00:02:29,650
现在我们回到一个阵地上面来讲

59
00:02:29,650 --> 00:02:31,690
对于text flow 的一个发展历程同时期

60
00:02:31,690 --> 00:02:33,820
来有cafe 咖啡的话

61
00:02:33,820 --> 00:02:35,980
它主要是由facebook 在强烈的推广

62
00:02:35,980 --> 00:02:37,990
现在的版本叫做咖啡2

63
00:02:37,990 --> 00:02:41,200
最新的版本是咖啡二作为一个拍套式的一个c 加加

64
00:02:41,200 --> 00:02:43,420
后端已经并入到拍到水里面去了

65
00:02:43,600 --> 00:02:45,880
拍上他主要是由touch 发展过来的

66
00:02:45,880 --> 00:02:47,650
因为touch 它采用的是内外语言

67
00:02:47,650 --> 00:02:48,850
我们之前也讲了

68
00:02:48,850 --> 00:02:51,040
所以的话应用群体比较受限

69
00:02:51,040 --> 00:02:54,400
facebook 基于touch 框架开发出来一个part touch 

70
00:02:54,400 --> 00:02:55,180
并且在8套指1

71
00:02:55,180 --> 00:02:58,150
0的时候把咖啡二并入到拍档式中间去

72
00:02:58,150 --> 00:03:02,770
这样子的话拍大尺既结合了touch 的一个a p i 的一个这样的前端

73
00:03:02,770 --> 00:03:03,610
然后同时结合

74
00:03:03,610 --> 00:03:05,980
了一个咖啡的22的一个这样后端

75
00:03:05,980 --> 00:03:09,100
所以的话派大致是现在非常受好评的一个框架

76
00:03:09,100 --> 00:03:11,320
然后我们再来看另外一条时间的发展线

77
00:03:11,320 --> 00:03:13,750
也就是cm 我们刚刚讲了crm 的话

78
00:03:13,750 --> 00:03:16,900
是由加拿大一般深度学习的元老所开发出来的

79
00:03:16,900 --> 00:03:18,820
他慢慢的发展到一个真实佛罗1

80
00:03:18,820 --> 00:03:19,690
0的版本

81
00:03:19,690 --> 00:03:21,370
虽然说fido 和tens flow 1

82
00:03:21,370 --> 00:03:23,620
0并没有一个必然的直接的关系

83
00:03:23,620 --> 00:03:27,490
但是tens flow 一个开发和c mo 有千丝万缕的一个联系

84
00:03:27,490 --> 00:03:31,870
所以的话我们这里也把它理解为是cm 作为tens flow 了一个这样的原型

85
00:03:31,870 --> 00:03:33,850
现在cm 已经停止开发了

86
00:03:34,030 --> 00:03:36,220
然后我们最新的是follow 2的版本

87
00:03:36,220 --> 00:03:37,000
也就是2

88
00:03:37,000 --> 00:03:37,300
0

89
00:03:37,300 --> 00:03:39,430
它同样是从flaten floor 1

90
00:03:39,430 --> 00:03:41,080
0再到一个this flow 2

91
00:03:41,080 --> 00:03:41,350
0

92
00:03:41,350 --> 00:03:43,300
然后同时期的非常优秀的框架

93
00:03:43,300 --> 00:03:44,110
还有两个

94
00:03:44,110 --> 00:03:47,710
第一个是山某上路的话是日本的一个这样的深度学习的框架

95
00:03:47,710 --> 00:03:54,040
可以说part at touch 和tenth floor 2都很大程度上面借鉴了一个some more 的一

96
00:03:54,040 --> 00:03:55,540
这样的风格的一个设计

97
00:03:55,540 --> 00:03:57,580
使得拍套指能够非常的受好评

98
00:03:57,580 --> 00:04:02,170
主要原因也是拍大尺最早借这样的一个参谋的一个a p i 设计风格

99
00:04:02,170 --> 00:04:07,090
还有另外一个值得一提的是我们华人的一个成天启和李牧开发了一个mx net 

100
00:04:07,090 --> 00:04:10,490
现在已经是被亚马逊作为一个官方的一个深度学习的框架

101
00:04:10,670 --> 00:04:12,830
那我们时间来到了2017年

102
00:04:12,830 --> 00:04:14,060
2017年的话

103
00:04:14,060 --> 00:04:16,220
这个时候呢tens flow 从测试版0

104
00:04:16,220 --> 00:04:18,110
1版本变成一个正式版本

105
00:04:18,110 --> 00:04:24,050
它的一个最大的区别是之前很多的一个a p i 的一个接口放在tf 的contract 这一个分支上面去

106
00:04:24,050 --> 00:04:26,720
现在已经正式了划分到tf layers 

107
00:04:26,720 --> 00:04:28,760
metric is the northeast 在里面去了

108
00:04:28,760 --> 00:04:30,680
然后的话还增加一个tf t 8个

109
00:04:30,680 --> 00:04:31,760
的工具

110
00:04:31,940 --> 00:04:32,990
在tens flow 1

111
00:04:32,990 --> 00:04:34,400
0的一个同时期

112
00:04:34,400 --> 00:04:36,020
拍touch 零点1版本也发布了

113
00:04:36,020 --> 00:04:38,480
我们这里先做一个这样的伏笔

114
00:04:38,480 --> 00:04:39,980
然后我们来简单的比较一下

115
00:04:39,980 --> 00:04:43,690
这是flow 了一个编程风格和拍套子的一个编程风格

116
00:04:43,870 --> 00:04:45,190
这里我们指的是胡老师

117
00:04:45,190 --> 00:04:46,630
指的是tenth floor 1

118
00:04:46,630 --> 00:04:47,560
0版本或者说2

119
00:04:47,560 --> 00:04:48,910
0版本集成了一个编程风格

120
00:04:48,910 --> 00:04:52,990
所以让我们来看一下做一个简单的a 加b 的一个这样运算

121
00:04:52,990 --> 00:04:54,400
对于配套上来说

122
00:04:54,400 --> 00:04:58,480
我们首先新建一个a 这样的tensor 在新建一个b 要吞锁

123
00:04:58,480 --> 00:05:02,050
然后通过一个touch a 加b 简单的返回率这样结果

124
00:05:02,050 --> 00:05:03,880
然后我们就可以bring 等

125
00:05:03,880 --> 00:05:10,990
得到这样的一个c 了个账结果这里我们可以看到拍套式的一个这样风格是非常非常接近于我们python 的一张风格

126
00:05:10,990 --> 00:05:12,220
看上去是非常非常好理解

127
00:05:12,220 --> 00:05:12,920
对吗

128
00:05:13,100 --> 00:05:14,720
但是对于森斯佛罗伊来说

129
00:05:14,720 --> 00:05:16,190
事情并没有这么简单

130
00:05:16,190 --> 00:05:20,120
首先的话它还是要创建a 和b 这样的两个tensor 

131
00:05:20,120 --> 00:05:24,230
但是的话我们看一下这里的c 并不是能够直接的返回一个这样结果的

132
00:05:24,230 --> 00:05:26,210
他需要创建一个session 的一样概念

133
00:05:26,210 --> 00:05:27,800
还有一个叫做grap her 概念

134
00:05:27,800 --> 00:05:30,620
只是说大家并没有看到graph 概念在这里面去

135
00:05:30,620 --> 00:05:32,750
但是他其实有一个graph 概念在车里面

136
00:05:32,750 --> 00:05:33,110
然后我们通过

137
00:05:33,110 --> 00:05:36,740
这个session 点run m 他能够返回这个结果

138
00:05:36,740 --> 00:05:41,600
这一种编程风格像极了另外一种语言叫做一个vhdl 

139
00:05:41,600 --> 00:05:42,650
如果大家做过硬件的话

140
00:05:42,650 --> 00:05:46,130
就知道vhdl 它是一种硬件编程语言

141
00:05:46,130 --> 00:05:50,510
也就是说你通过这一个方式把这个计算图就类似于一个叫硬件电路

142
00:05:50,510 --> 00:05:53,120
把a 和b 和c 连接

143
00:05:53,120 --> 00:05:56,630
在一起这个你可以把它理解为就是一个这样的硬件的电路

144
00:05:56,630 --> 00:05:57,470
对吗

145
00:05:57,470 --> 00:06:01,070
然后的话你可以通过给这个硬件电路通电运行

146
00:06:01,070 --> 00:06:04,310
把a 数据和b 数据未经去

147
00:06:04,310 --> 00:06:10,100
这样的话你就可以取得这个电路印刷出来的一个结果叫c 所以的话相当于一个软件的一个编程语言来说

148
00:06:10,100 --> 00:06:13,130
也就是相当于我们右边的一个配套值编写风格来讲

149
00:06:13,130 --> 00:06:14,300
我们tens flow 1

150
00:06:14,300 --> 00:06:15,110
0的话

151
00:06:15,110 --> 00:06:16,640
徒增了很多章的概念

152
00:06:16,640 --> 00:06:19,050
使得用户使用起来非常非常困扰

153
00:06:19,230 --> 00:06:22,170
这里大家看到的只是一个比较麻烦的一个点

154
00:06:22,170 --> 00:06:23,160
其实都是follow 1

155
00:06:23,160 --> 00:06:23,310
0

156
00:06:23,310 --> 00:06:24,630
还有很多很多这样的点

157
00:06:24,630 --> 00:06:26,130
大家来看一下

158
00:06:26,130 --> 00:06:28,890
国外有一个人专门写了一个to the floor socks 

159
00:06:28,890 --> 00:06:30,660
它专门指的是一个to flow 1

160
00:06:30,660 --> 00:06:33,660
0的一个down n x 就是学生flo 非常非常的难用

161
00:06:33,660 --> 00:06:35,640
他体现在一个调试洗啊

162
00:06:35,640 --> 00:06:36,690
非常非常困难

163
00:06:36,690 --> 00:06:39,240
而且api 经常改来改去非常混乱

164
00:06:39,240 --> 00:06:40,020
所以的话

165
00:06:40,020 --> 00:06:42,300
即使你是一个这样的专家

166
00:06:42,300 --> 00:06:43,230
你对于tens flow 1

167
00:06:43,230 --> 00:06:43,800
0来说

168
00:06:43,800 --> 00:06:45,390
你也不敢说你是精通了的

169
00:06:45,390 --> 00:06:47,850
因为它使用起来确实是比较困难

170
00:06:47,850 --> 00:06:52,020
这样子的话使得大批的一个researcher 开始转向一个by dug 

171
00:06:52,020 --> 00:06:55,470
也就是说我们在2017年当时的一个派道士零点1是发布了

172
00:06:55,470 --> 00:06:56,220
对吗

173
00:06:56,220 --> 00:06:57,210
从那个时候开始

174
00:06:57,210 --> 00:06:59,250
大批的一个researcher 开始慢慢的关

175
00:06:59,250 --> 00:07:02,730
知道有一个这样的很好的一个备选的方案可以使用

176
00:07:02,730 --> 00:07:05,580
而且使用起来比tens flow 用起来非常的简洁

177
00:07:05,580 --> 00:07:06,730
精细和高效

178
00:07:06,910 --> 00:07:08,200
但是到现在为止

179
00:07:08,200 --> 00:07:09,670
事情就变得不一样了

180
00:07:09,670 --> 00:07:10,480
在今年的时候

181
00:07:10,480 --> 00:07:11,230
text flow 2

182
00:07:11,230 --> 00:07:12,100
0即将发布

183
00:07:12,100 --> 00:07:12,550
但是flow 2

184
00:07:12,550 --> 00:07:14,740
0的一个最大的一个特性是什么呢

185
00:07:14,740 --> 00:07:16,700
最大的特性是

186
00:07:16,880 --> 00:07:19,250
easy to use 

187
00:07:19,250 --> 00:07:23,870
也就是说他把之前的一些图c 上的一些概念什么给你去掉以后

188
00:07:23,870 --> 00:07:28,550
真是服了变得可以像python 语言相by 道士一样所见即所得

189
00:07:28,550 --> 00:07:30,830
我们来看一下他知道一些概念

190
00:07:30,830 --> 00:07:33,050
比如说一个fashion 的概念

191
00:07:33,050 --> 00:07:34,940
一个实时控制的一些概念

192
00:07:34,940 --> 00:07:36,890
还有很多这种分支控制的一些概念

193
00:07:36,890 --> 00:07:39,830
本来这些概念可以使用python 语言提供的一些

194
00:07:39,830 --> 00:07:42,620
if else for 这一些实时控制逻辑来完成

195
00:07:42,620 --> 00:07:43,340
对吗

196
00:07:43,340 --> 00:07:46,700
that tens flow 他硬生生的造出了一个这样的低张图的概念

197
00:07:46,700 --> 00:07:48,560
然后他所有的一个图的一个搭建

198
00:07:48,560 --> 00:07:49,760
必须使用他自己的一个

199
00:07:49,760 --> 00:07:52,610
if else four 这样的一个时序控制逻辑

200
00:07:52,610 --> 00:07:56,900
然后变量的一个命名体系也分为一个python 的一个引用和它内部的一个这样的

201
00:07:56,900 --> 00:07:58,340
命名的体系

202
00:07:58,340 --> 00:07:59,840
这样子的话使得tens flow 1

203
00:07:59,840 --> 00:08:02,340
0使用起来非常非常的麻烦

204
00:08:02,520 --> 00:08:03,720
那我们现在来看一下

205
00:08:03,720 --> 00:08:06,480
真是flo 2和petals的一个这样的区别

206
00:08:06,480 --> 00:08:09,660
同样到底是新建a b 两个变量

207
00:08:09,660 --> 00:08:17,430
然后通过a 加b 这个算子得到了一个c 然后我们可以非常简单直接bring int 我们跟拍到的比较一下

208
00:08:17,430 --> 00:08:18,390
几乎是一模一样的

209
00:08:18,390 --> 00:08:18,660
对吗

210
00:08:18,660 --> 00:08:21,480
也就是说dance floor 2和bytouch 的一个风格

211
00:08:21,480 --> 00:08:22,530
基本上来说

212
00:08:22,530 --> 00:08:24,840
我已经是非常非常相近的

213
00:08:25,350 --> 00:08:29,040
那我们到底是选用part touch 还是选用tenth floor 呢

214
00:08:29,040 --> 00:08:31,860
我们现在可以来看一组这样的数据

215
00:08:31,860 --> 00:08:33,840
首先是截止到1

216
00:08:33,840 --> 00:08:34,680
13的一个增幅

217
00:08:34,680 --> 00:08:38,490
老版本在get up 的上面是有12万的一个这样的store 

218
00:08:38,490 --> 00:08:40,230
然后拍tah 的话也不错

219
00:08:40,230 --> 00:08:41,790
大概是有2万张store 

220
00:08:41,790 --> 00:08:44,490
总的来说跟单词波罗的一个区别还是蛮大的

221
00:08:44,490 --> 00:08:45,360
然后我们来看一组

222
00:08:45,360 --> 00:08:47,100
这样的统计的数据

223
00:08:47,100 --> 00:08:50,580
也就是说在一个这样的总得分里面to flow 是遥遥领先的

224
00:08:50,580 --> 00:08:53,250
然后紧跟其后的是一个carols 

225
00:08:53,250 --> 00:08:56,000
然后的话就是我们的第三名part touch 

226
00:08:56,180 --> 00:08:59,330
再就是一个google 的搜索了一个这样的指数

227
00:08:59,330 --> 00:09:00,860
真是follow 还是遥遥领先

228
00:09:00,860 --> 00:09:02,900
然后拍套纸的话是第三

229
00:09:02,900 --> 00:09:04,490
再就是一个这样的趋势图

230
00:09:04,490 --> 00:09:08,240
我们可以看得出来这一根蓝色的线就是拍touch 

231
00:09:08,240 --> 00:09:13,280
然后这一根红色的线就是一个tf 虽然配套是这几年的口碑一直不错

232
00:09:13,280 --> 00:09:16,190
但是总的来说tf 的一个生态圈和tf 的

233
00:09:16,190 --> 00:09:19,070
使用的一个人群的基数还是遥遥领先的

234
00:09:19,070 --> 00:09:21,260
而且gf 由google 的一个站台

235
00:09:21,260 --> 00:09:26,600
但是派大神的母公司facebook 这几年受困于隐私丑闻发展起来不是特别好

236
00:09:26,600 --> 00:09:27,410
这也是拍挞

237
00:09:27,410 --> 00:09:30,890
只错过了一个超越tens flow 了一个最佳的时机

238
00:09:30,890 --> 00:09:33,200
增follow 2发布以后拍他只想要超越

239
00:09:33,200 --> 00:09:35,570
但是floor 会变得更加的一个困难

240
00:09:35,570 --> 00:09:36,200
我们来看一

241
00:09:36,200 --> 00:09:37,850
在有意思的一组数据

242
00:09:37,850 --> 00:09:41,810
也就是在一个a caf 的paper 里面的一个mention 的指数

243
00:09:41,810 --> 00:09:42,830
这个使得什么呢

244
00:09:42,830 --> 00:09:47,720
这个指的是我们的一个计算机的一个paper 都会发布在a acf 这个网站上面去

245
00:09:47,720 --> 00:09:52,460
然后有人专门来统计了caf 上面的一个paper 的一个提到了一个框架的一个指数

246
00:09:52,640 --> 00:09:56,600
也就是说在阿卡的paper 里面to the floor 提到了一个数量是最多的

247
00:09:56,600 --> 00:09:57,920
然后就是一个拍大尺

248
00:09:57,920 --> 00:09:59,480
再就是一个carols 

249
00:09:59,480 --> 00:10:00,260
大家可以看得到

250
00:10:00,260 --> 00:10:02,390
在这一个统计数据里面拍套脂肪

251
00:10:02,390 --> 00:10:04,670
而是超越了carols 排名第二

252
00:10:04,670 --> 00:10:09,770
这也说明了在学术界拍档纸确实得到了很多的一个researcher 的一个青睐

253
00:10:09,770 --> 00:10:12,650
因为它使用起来就是比较简洁清晰和高效

254
00:10:12,780 --> 00:10:13,860
但是总的来说

255
00:10:13,860 --> 00:10:15,480
但是floor 得益于google 的发展

256
00:10:15,480 --> 00:10:17,400
以及之前达到了一个用户基础

257
00:10:17,400 --> 00:10:20,330
它的流行度还是远远大于一个拍touch 

258
00:10:21,020 --> 00:10:21,720
那么对于

